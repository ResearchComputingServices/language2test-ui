// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`main should match snapshot when user has the role of "Administrator" 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Main
      authenticate={false}
    >
      <WithStyles(ForwardRef(AppBar))
        position="fixed"
      >
        <ForwardRef(AppBar)
          classes={
            Object {
              "colorDefault": "MuiAppBar-colorDefault",
              "colorInherit": "MuiAppBar-colorInherit",
              "colorPrimary": "MuiAppBar-colorPrimary",
              "colorSecondary": "MuiAppBar-colorSecondary",
              "colorTransparent": "MuiAppBar-colorTransparent",
              "positionAbsolute": "MuiAppBar-positionAbsolute",
              "positionFixed": "MuiAppBar-positionFixed",
              "positionRelative": "MuiAppBar-positionRelative",
              "positionStatic": "MuiAppBar-positionStatic",
              "positionSticky": "MuiAppBar-positionSticky",
              "root": "MuiAppBar-root",
            }
          }
          position="fixed"
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
            component="header"
            elevation={4}
            square={true}
          >
            <ForwardRef(Paper)
              className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              component="header"
              elevation={4}
              square={true}
            >
              <header
                className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="tool-bar"
                >
                  <ForwardRef(Toolbar)
                    className="tool-bar"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular tool-bar MuiToolbar-gutters"
                    >
                      <div
                        className="hamburger-button-container"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          className="hamburger-button"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            className="hamburger-button"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root hamburger-button"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root hamburger-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="MuiButtonBase-root MuiIconButton-root hamburger-button"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef
                                      className="hamburger-button-icon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="hamburger-button-icon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="hamburger-button-icon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root hamburger-button-icon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                      <Logo
                        className=""
                        height={64}
                      >
                        <img
                          alt="Carleton University"
                          className="logo"
                          height={64}
                          src="carleton.svg"
                        />
                      </Logo>
                      <div
                        className="app-bar-segment"
                      >
                        <h5
                          className="app-title"
                        >
                          Platform for Testing Language Learners
                        </h5>
                        <UserMenu
                          displayName="Administrator User"
                          dropdowns={
                            Array [
                              false,
                              false,
                              Object {
                                "Icon": <Memo(ExitToAppIcon) />,
                                "handler": [Function],
                                "title": "Logout",
                              },
                            ]
                          }
                        >
                          <div>
                            <div
                              className="user-menu"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="menuitem"
                              tabIndex={0}
                            >
                              <h2
                                className="display-name"
                              >
                                Administrator User
                              </h2>
                              <ForwardRef
                                className="arrow-dropdown"
                              >
                                <WithStyles(ForwardRef(SvgIcon))
                                  className="arrow-dropdown"
                                >
                                  <ForwardRef(SvgIcon)
                                    className="arrow-dropdown"
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root arrow-dropdown"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M7 10l5 5 5-5z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </div>
                            <WithStyles(ForwardRef(Menu))
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "bottom",
                                }
                              }
                              elevation={2}
                              getContentAnchorEl={null}
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "top",
                                }
                              }
                            >
                              <ForwardRef(Menu)
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "center",
                                    "vertical": "bottom",
                                  }
                                }
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                elevation={2}
                                getContentAnchorEl={null}
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "center",
                                    "vertical": "top",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "bottom",
                                    }
                                  }
                                  elevation={2}
                                  getContentAnchorEl={null}
                                  keepMounted={true}
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "bottom",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    elevation={2}
                                    getContentAnchorEl={null}
                                    keepMounted={true}
                                    onClose={[Function]}
                                    onEntering={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body>
                                              <div
                                                class="toasts-container "
                                                style="bottom: 10px; right: 10px;"
                                              />
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                                                  style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-testid="user-menu-item-Logout"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                      <span
                                                        class="pl-2"
                                                      >
                                                         
                                                        Logout
                                                         
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Grow)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                                timeout="auto"
                                              >
                                                <Transition
                                                  addEndListener={[Function]}
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={null}
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={2}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "transform": "scale(0.75, 0.5625)",
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={2}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "transform": "scale(0.75, 0.5625)",
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  data-testid="user-menu-item-Logout"
                                                                  key=".$.$0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    data-testid="user-menu-item-Logout"
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      data-testid="user-menu-item-Logout"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        data-testid="user-menu-item-Logout"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          data-testid="user-menu-item-Logout"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            data-testid="user-menu-item-Logout"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              data-testid="user-menu-item-Logout"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef
                                                                                key=".0"
                                                                              >
                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                  <ForwardRef(SvgIcon)
                                                                                    classes={
                                                                                      Object {
                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                        "root": "MuiSvgIcon-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden={true}
                                                                                      className="MuiSvgIcon-root"
                                                                                      focusable="false"
                                                                                      viewBox="0 0 24 24"
                                                                                    >
                                                                                      <path
                                                                                        d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                      />
                                                                                    </svg>
                                                                                  </ForwardRef(SvgIcon)>
                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                              </ForwardRef>
                                                                              <span
                                                                                className="pl-2"
                                                                                key=".1"
                                                                              >
                                                                                 
                                                                                Logout
                                                                                 
                                                                              </span>
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Grow)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                        </UserMenu>
                      </div>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </header>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(AppBar)>
      </WithStyles(ForwardRef(AppBar))>
      <main
        className="content"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            key="/"
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
          >
            <_default
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <div
                className="my-5 text-center"
              >
                <span
                  aria-labelledby="question"
                  role="img"
                >
                  ❓
                </span>
                404 Page Not Found
                <span
                  aria-labelledby="question"
                  role="img"
                >
                  ❓
                </span>
              </div>
            </_default>
          </Route>
        </Switch>
        <Component
          store={
            Object {
              "_data": Object {
                "classNames": "",
                "message": "",
                "status": "",
                "timer": 0,
              },
              "_nextHandlerId": 1,
              "_watchers": Array [
                Object {
                  "id": 0,
                  "trigger": [Function],
                },
              ],
            }
          }
        >
          <Portal
            containerInfo={
              <body>
                <div
                  class="toasts-container "
                  style="bottom: 10px; right: 10px;"
                />
                <div
                  aria-hidden="true"
                  class="MuiPopover-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                >
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                    style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                    tabindex="-1"
                  >
                    <ul
                      class="MuiList-root MuiMenu-list MuiList-padding"
                      role="menu"
                      tabindex="-1"
                    >
                      <li
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                        data-testid="user-menu-item-Logout"
                        role="menuitem"
                        tabindex="0"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                        <span
                          class="pl-2"
                        >
                           
                          Logout
                           
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </li>
                    </ul>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="toasts-container "
              style={
                Object {
                  "bottom": 10,
                  "right": 10,
                }
              }
            />
          </Portal>
        </Component>
        <Confirmation>
          <WithStyles(ForwardRef(Dialog))
            onClose={[Function]}
            open={false}
          >
            <ForwardRef(Dialog)
              classes={
                Object {
                  "container": "MuiDialog-container",
                  "paper": "MuiDialog-paper",
                  "paperFullScreen": "MuiDialog-paperFullScreen",
                  "paperFullWidth": "MuiDialog-paperFullWidth",
                  "paperScrollBody": "MuiDialog-paperScrollBody",
                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                  "paperWidthLg": "MuiDialog-paperWidthLg",
                  "paperWidthMd": "MuiDialog-paperWidthMd",
                  "paperWidthSm": "MuiDialog-paperWidthSm",
                  "paperWidthXl": "MuiDialog-paperWidthXl",
                  "paperWidthXs": "MuiDialog-paperWidthXs",
                  "root": "MuiDialog-root",
                  "scrollBody": "MuiDialog-scrollBody",
                  "scrollPaper": "MuiDialog-scrollPaper",
                }
              }
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root"
                closeAfterTransition={true}
                disableBackdropClick={false}
                disableEscapeKeyDown={false}
                onClose={[Function]}
                open={false}
              />
            </ForwardRef(Dialog)>
          </WithStyles(ForwardRef(Dialog))>
        </Confirmation>
      </main>
    </Main>
  </Provider>
</Router>
`;

exports[`main should match snapshot when user has the role of "Test Taker" 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Main
      authenticate={false}
    >
      <WithStyles(ForwardRef(AppBar))
        position="fixed"
      >
        <ForwardRef(AppBar)
          classes={
            Object {
              "colorDefault": "MuiAppBar-colorDefault",
              "colorInherit": "MuiAppBar-colorInherit",
              "colorPrimary": "MuiAppBar-colorPrimary",
              "colorSecondary": "MuiAppBar-colorSecondary",
              "colorTransparent": "MuiAppBar-colorTransparent",
              "positionAbsolute": "MuiAppBar-positionAbsolute",
              "positionFixed": "MuiAppBar-positionFixed",
              "positionRelative": "MuiAppBar-positionRelative",
              "positionStatic": "MuiAppBar-positionStatic",
              "positionSticky": "MuiAppBar-positionSticky",
              "root": "MuiAppBar-root",
            }
          }
          position="fixed"
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
            component="header"
            elevation={4}
            square={true}
          >
            <ForwardRef(Paper)
              className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              component="header"
              elevation={4}
              square={true}
            >
              <header
                className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorPrimary mui-fixed MuiPaper-elevation4"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="tool-bar"
                >
                  <ForwardRef(Toolbar)
                    className="tool-bar"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular tool-bar MuiToolbar-gutters"
                    >
                      <div
                        className="hamburger-button-container"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          className="hamburger-button"
                          onClick={[Function]}
                        >
                          <ForwardRef(IconButton)
                            className="hamburger-button"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            onClick={[Function]}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root hamburger-button"
                              disabled={false}
                              focusRipple={true}
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root hamburger-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="MuiButtonBase-root MuiIconButton-root hamburger-button"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <ForwardRef
                                      className="hamburger-button-icon"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        className="hamburger-button-icon"
                                      >
                                        <ForwardRef(SvgIcon)
                                          className="hamburger-button-icon"
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root hamburger-button-icon"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                  </span>
                                  <WithStyles(memo)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                      <Logo
                        className=""
                        height={64}
                      >
                        <img
                          alt="Carleton University"
                          className="logo"
                          height={64}
                          src="carleton.svg"
                        />
                      </Logo>
                      <div
                        className="app-bar-segment"
                      >
                        <h5
                          className="app-title"
                        >
                          Platform for Testing Language Learners
                        </h5>
                        <UserMenu
                          displayName="Test Taker User"
                          dropdowns={
                            Array [
                              false,
                              false,
                              Object {
                                "Icon": <Memo(ExitToAppIcon) />,
                                "handler": [Function],
                                "title": "Logout",
                              },
                            ]
                          }
                        >
                          <div>
                            <div
                              className="user-menu"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="menuitem"
                              tabIndex={0}
                            >
                              <h2
                                className="display-name"
                              >
                                Test Taker User
                              </h2>
                              <ForwardRef
                                className="arrow-dropdown"
                              >
                                <WithStyles(ForwardRef(SvgIcon))
                                  className="arrow-dropdown"
                                >
                                  <ForwardRef(SvgIcon)
                                    className="arrow-dropdown"
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root arrow-dropdown"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M7 10l5 5 5-5z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </div>
                            <WithStyles(ForwardRef(Menu))
                              anchorEl={null}
                              anchorOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "bottom",
                                }
                              }
                              elevation={2}
                              getContentAnchorEl={null}
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                              transformOrigin={
                                Object {
                                  "horizontal": "center",
                                  "vertical": "top",
                                }
                              }
                            >
                              <ForwardRef(Menu)
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "center",
                                    "vertical": "bottom",
                                  }
                                }
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                elevation={2}
                                getContentAnchorEl={null}
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "center",
                                    "vertical": "top",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "bottom",
                                    }
                                  }
                                  elevation={2}
                                  getContentAnchorEl={null}
                                  keepMounted={true}
                                  onClose={[Function]}
                                  onEntering={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "bottom",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    elevation={2}
                                    getContentAnchorEl={null}
                                    keepMounted={true}
                                    onClose={[Function]}
                                    onEntering={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body>
                                              <div
                                                class="toasts-container "
                                                style="bottom: 10px; right: 10px;"
                                              />
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                                                  style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-testid="user-menu-item-Logout"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                      <span
                                                        class="pl-2"
                                                      >
                                                         
                                                        Logout
                                                         
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="toasts-container "
                                                style="bottom: 10px; right: 10px;"
                                              />
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                                                  style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-testid="user-menu-item-Logout"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                        />
                                                      </svg>
                                                      <span
                                                        class="pl-2"
                                                      >
                                                         
                                                        Logout
                                                         
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Grow)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                                timeout="auto"
                                              >
                                                <Transition
                                                  addEndListener={[Function]}
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={null}
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={2}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "transform": "scale(0.75, 0.5625)",
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={2}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "transform": "scale(0.75, 0.5625)",
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  data-testid="user-menu-item-Logout"
                                                                  key=".$.$0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    data-testid="user-menu-item-Logout"
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      data-testid="user-menu-item-Logout"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        data-testid="user-menu-item-Logout"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          data-testid="user-menu-item-Logout"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            data-testid="user-menu-item-Logout"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              data-testid="user-menu-item-Logout"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef
                                                                                key=".0"
                                                                              >
                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                  <ForwardRef(SvgIcon)
                                                                                    classes={
                                                                                      Object {
                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                        "root": "MuiSvgIcon-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden={true}
                                                                                      className="MuiSvgIcon-root"
                                                                                      focusable="false"
                                                                                      viewBox="0 0 24 24"
                                                                                    >
                                                                                      <path
                                                                                        d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                      />
                                                                                    </svg>
                                                                                  </ForwardRef(SvgIcon)>
                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                              </ForwardRef>
                                                                              <span
                                                                                className="pl-2"
                                                                                key=".1"
                                                                              >
                                                                                 
                                                                                Logout
                                                                                 
                                                                              </span>
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Grow)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                        </UserMenu>
                      </div>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </header>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(AppBar)>
      </WithStyles(ForwardRef(AppBar))>
      <main
        className="content"
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            key="/"
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
          >
            <_default
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <div
                className="my-5 text-center"
              >
                <span
                  aria-labelledby="question"
                  role="img"
                >
                  ❓
                </span>
                404 Page Not Found
                <span
                  aria-labelledby="question"
                  role="img"
                >
                  ❓
                </span>
              </div>
            </_default>
          </Route>
        </Switch>
        <Component
          store={
            Object {
              "_data": Object {
                "classNames": "",
                "message": "",
                "status": "",
                "timer": 0,
              },
              "_nextHandlerId": 2,
              "_watchers": Array [
                Object {
                  "id": 0,
                  "trigger": [Function],
                },
                Object {
                  "id": 1,
                  "trigger": [Function],
                },
              ],
            }
          }
        >
          <Portal
            containerInfo={
              <body>
                <div
                  class="toasts-container "
                  style="bottom: 10px; right: 10px;"
                />
                <div
                  aria-hidden="true"
                  class="MuiPopover-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                >
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                    style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                    tabindex="-1"
                  >
                    <ul
                      class="MuiList-root MuiMenu-list MuiList-padding"
                      role="menu"
                      tabindex="-1"
                    >
                      <li
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                        data-testid="user-menu-item-Logout"
                        role="menuitem"
                        tabindex="0"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                        <span
                          class="pl-2"
                        >
                           
                          Logout
                           
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </li>
                    </ul>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
                <div
                  class="toasts-container "
                  style="bottom: 10px; right: 10px;"
                />
                <div
                  aria-hidden="true"
                  class="MuiPopover-root"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                >
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation2 MuiPaper-rounded"
                    style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                    tabindex="-1"
                  >
                    <ul
                      class="MuiList-root MuiMenu-list MuiList-padding"
                      role="menu"
                      tabindex="-1"
                    >
                      <li
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                        data-testid="user-menu-item-Logout"
                        role="menuitem"
                        tabindex="0"
                      >
                        <svg
                          aria-hidden="true"
                          class="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                          />
                        </svg>
                        <span
                          class="pl-2"
                        >
                           
                          Logout
                           
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </li>
                    </ul>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              className="toasts-container "
              style={
                Object {
                  "bottom": 10,
                  "right": 10,
                }
              }
            />
          </Portal>
        </Component>
        <Confirmation>
          <WithStyles(ForwardRef(Dialog))
            onClose={[Function]}
            open={false}
          >
            <ForwardRef(Dialog)
              classes={
                Object {
                  "container": "MuiDialog-container",
                  "paper": "MuiDialog-paper",
                  "paperFullScreen": "MuiDialog-paperFullScreen",
                  "paperFullWidth": "MuiDialog-paperFullWidth",
                  "paperScrollBody": "MuiDialog-paperScrollBody",
                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                  "paperWidthLg": "MuiDialog-paperWidthLg",
                  "paperWidthMd": "MuiDialog-paperWidthMd",
                  "paperWidthSm": "MuiDialog-paperWidthSm",
                  "paperWidthXl": "MuiDialog-paperWidthXl",
                  "paperWidthXs": "MuiDialog-paperWidthXs",
                  "root": "MuiDialog-root",
                  "scrollBody": "MuiDialog-scrollBody",
                  "scrollPaper": "MuiDialog-scrollPaper",
                }
              }
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root"
                closeAfterTransition={true}
                disableBackdropClick={false}
                disableEscapeKeyDown={false}
                onClose={[Function]}
                open={false}
              />
            </ForwardRef(Dialog)>
          </WithStyles(ForwardRef(Dialog))>
        </Confirmation>
      </main>
    </Main>
  </Provider>
</Router>
`;
