// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox should match snapshot 1`] = `
<div
  className="field"
>
  <Controller
    as={
      <ForwardRef(WithStyles)
        control={
          <ForwardRef(WithStyles)
            color="primary"
          />
        }
      />
    }
    control={
      Object {
        "defaultValuesRef": Object {
          "current": Object {},
        },
        "dirtyFieldsRef": Object {
          "current": Set {},
        },
        "errorsRef": Object {
          "current": Object {},
        },
        "fieldArrayDefaultValues": Object {
          "current": Object {},
        },
        "fieldArrayNamesRef": Object {
          "current": Set {},
        },
        "fieldsRef": Object {
          "current": Object {},
        },
        "fieldsWithValidationRef": Object {
          "current": Set {},
        },
        "formState": Object {
          "dirty": false,
          "dirtyFields": Set {},
          "isSubmitted": false,
          "isSubmitting": false,
          "isValid": false,
          "submitCount": 0,
          "touched": Object {},
        },
        "getValues": [Function],
        "isDirtyRef": Object {
          "current": false,
        },
        "isWatchAllRef": Object {
          "current": false,
        },
        "mode": Object {
          "isOnBlur": false,
          "isOnChange": false,
          "isOnSubmit": true,
        },
        "reRender": [Function],
        "reValidateMode": Object {
          "isReValidateOnBlur": false,
          "isReValidateOnSubmit": false,
        },
        "readFormStateRef": Object {
          "current": Object {
            "constructor": true,
            "dirty": true,
            "dirtyFields": true,
            "isSubmitted": true,
            "isSubmitting": true,
            "isValid": true,
            "submitCount": true,
            "touched": true,
          },
        },
        "register": [Function],
        "removeFieldEventListener": [Function],
        "resetFieldArrayFunctionRef": Object {
          "current": Object {},
        },
        "setValue": [Function],
        "touchedFieldsRef": Object {
          "current": Object {},
        },
        "triggerValidation": [Function],
        "unregister": [Function],
        "validFieldsRef": Object {
          "current": Set {},
        },
        "watchFieldsRef": Object {
          "current": Set {},
        },
      }
    }
    defaultValue={false}
    rules={
      Object {
        "required": undefined,
      }
    }
  />
</div>
`;
